@startuml QuizzesClassDiagram

class User {
  + id: string
  + mail: string
  + username: string
  + firstName: string
  + lastName: string
  + avatar: string
  + usertype: string
  + password: string
  + friends: User[]
  + follows: User[]
  + point: number
  + isVerified: boolean
  + update: object

  + login(username: string, password: string): boolean
  + register(user: User): User
  + logout(): void
  + updateProfile(firstName: string, lastName: string, avatar: string): void
}

class Student {

}

class Teacher {

}

class Quiz {
  + id: string
  + name: string
  + creator: User
  + description: string
  + backgroundImage: string
  + isPublic: boolean
  + field: string
  + pointsPerQuestion: number
  + likes: User[]
  + comments: Message[]
  + questionList: Question[]
  + createAt: Date

  + addQuiz(quiz: Quiz): Quiz
  + updateQuiz(quiz: Quiz): Quiz
  + removeQuiz(id: string): void
}

class Question {
  + id: string
  + name: string
  + creator: User
  + backgroundImage: string
  + questionIndex: number
  + questionType: string
  + optionQuestion: string
  + maxCorrectAnswerCount: string
  + pointType: number
  + answerTime: number
  + answerList: Answer[]
  + CorrectAnswerCount: number
  + createAt: User
  + updateAt: Date

  + addQuestion(question: Question): void
  + removeQuestion(question: Question): void

}

class Answer {
  + id: string
  + name: string
  + body: type
  + isCorrect: boolean

  + addAnswer(answer: Answer): void
  + removeAnswer(answer: Answer): void
}

class Community {
  + id: string
  + name: string
  + creator: User
  + backgroundImage: string
  + users: User[]
  + quizzes: Quiz[]
  + field: string
  + chatBox: MessageCommunity[]
}

class MessageCommunity {
  + id: string
  + user: User
  + image: string
  + message: string
  + createAt: Date
}
class Game {
  + id: string
  + host: User
  + quiz: Quiz
  + pin: type
  + isLive: true
  + playerList: User[]
  + playerResultList: PlayerResult[]
  + CreateAt: Date

  + startGame(): void
  + endGame(): void
}

class PlayerResult {
  + id: string
  + player: User
  + game: Game
  + score: number
  + answers: PlayerAnswer[]
}

class PlayerAnswer {
  + id: string
  + questionIndex: number
  + answered: boolean
  + answer: string[]
  + points: number
}


class LeaderBoard {
  + id: string
  + game: Game
  + pin: string
  + playerResultList: PlayerResult[]
  + questionLeaderboard: QuestionLeaderBoard
  + currentLeaderboard: CurrentLeaderBoard[]
}

class QuestionLeaderBoard {
  + id: string
  + questionIndex: number
  + questionResultList: AnswerQuestion[]
}

class AnswerQuestion{
  + id: string
  + user: User
  + questionIndex: number
  + answered: Boolean
  + answers: String
  + time: number
  + points: number
}


class CurrentLeaderBoard {
  + id: string
  + questionIndex: number
  + leaderBoardList: LeaderboardList[]
}

class LeaderboardList {
  + id: string
  + user: User
  + answered: Boolean
  + answers: String
  + time: number
  + points: number
}


User "1" --> "0..*" Quiz : own
User "1" --> "0..*" User : friends
User "1" --> "0..*" User : follows
User <|-- Teacher
User <|-- Student

Quiz "1" -- "0..*" Question : questionList
Quiz "1" *-- "0..*" User : likes
Question "1" -- "1..*" Answer : answerList

Game "1" -- "1" Teacher : host
Game "1" -- "0..*" Student : playerList
Game "1" -- "1" Quiz : has

Community "1" *-- "0..*" MessageCommunity : chatBox
Community "1" *-- "0..*" User: User[]
Community "1" *-- "0..*" Quiz : quizzes


LeaderBoard "1" -- "1" Game : game
LeaderBoard "1" --o "0..*" PlayerResult : playerResultList
LeaderBoard "1" --o "1" QuestionLeaderBoard : questionLeaderboard
LeaderBoard "1" --o "0..*" CurrentLeaderBoard : currentLeaderboard

PlayerResult "1" --o "0..*" PlayerAnswer : answers
PlayerResult "1" -- "1" Game : playerResultList
PlayerResult "1" -- "1" User : user


QuestionLeaderBoard "1" --o "0..*" AnswerQuestion : questionResultList
CurrentLeaderBoard "1" --o "0..*" LeaderboardList : leaderBoardList



@enduml
